services:
  # Zookeeper - Required for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB
  mongo:
    image: mongo:7.0
    hostname: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./keyfile:/data/keyfile:ro
    command: --replSet rs0 --bind_ip_all --keyFile /data/keyfile
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB Replica Set Initialization
  mongo-setup:
    image: mongo:7.0
    container_name: mongo-setup
    depends_on:
      - mongo
    volumes:
      - ./scripts/setup-replica-set.js:/setup-replica-set.js:ro
    entrypoint: >
      bash -c "
        sleep 10 &&
        mongosh --host mongo:27017 -u admin -p password --authenticationDatabase admin /setup-replica-set.js
      "
    restart: "no"

  # Buffered CDC Service
  buffered-cdc:
    build: .
    container_name: buffered-cdc
    depends_on:
      kafka:
        condition: service_healthy
      mongo:
        condition: service_healthy
      mongo-setup:
        condition: service_completed_successfully
    environment:
      MONGODB_URI: mongodb://admin:password@mongo:27017/testdb?authSource=admin&replicaSet=rs0
      MONGODB_DATABASE: testdb
      MONGODB_COLLECTION: events
      KAFKA_BROKERS: kafka:29092
      KAFKA_TOPIC: cdc-events
      BUFFER_PATH: /data/buffer.db
      BUFFER_BATCH_SIZE: 100
      MONITOR_INTERVAL: 30s
    volumes:
      - buffer_data:/data
    restart: unless-stopped

  # Kafka UI (Optional - for monitoring)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    restart: unless-stopped

  # MongoDB Express (Optional - for MongoDB management)
  mongo-express:
    image: mongo-express:1.0.0-alpha
    container_name: mongo-express
    depends_on:
      - mongo
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongo:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: pass
    restart: unless-stopped

volumes:
  zookeeper_data:
  zookeeper_logs:
  kafka_data:
  mongo_data:
  buffer_data: